# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
# Source: fluent-bit/templates/configmap.yaml
---
{{- if .Values.enableLogging }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-fluent-bit-config
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: fluent-bit-0.36.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  fluent-bit.conf: |
    [SERVICE]
      Flush             1
      Log_Level         info
      Daemon            off
      Parsers_File /fluent-bit/etc/parsers.conf
      Parsers_File /fluent-bit/etc/custom_parsers.conf

    [INPUT]
      Name              tail
      Tag               dp.${POD_NAMESPACE}.${POD_NAME}.${POD_ID}.${CONTAINER_NAME}
      Path              /var/log/pods/${POD_NAMESPACE}_${POD_NAME}_${POD_ID}/*/*.log
      Exclude_Path      /var/log/pods/${POD_NAMESPACE}_${POD_NAME}_${POD_ID}/fluentbit/*.log
      multiline.parser  docker, cri
      DB                /var/log/flb_kube.db
      Mem_Buf_Limit     5MB
      Skip_Long_Lines   On
      Refresh_Interval  10

    [FILTER]
        Name              record_modifier
        Match             dp.*
        Remove_key        stream
        Remove_key        _p

    [FILTER]
        Name              parser
        Match             dp.*
        Key_Name          log
        Parser            json_decode
        Reserve_Data      True

    [FILTER]
        Name Lua
        Match *
        Script            /fluent-bit/etc/update_record.lua
        Call              update_record

    [OUTPUT]
        Name   stdout
        Match  dp.*
        Format json

    [OUTPUT]
      {{- range $key, $val := .Values.fluentBit.output }}
      {{ $key }} {{ $val }}
      {{- end }}

  custom_parsers.conf: |
    [PARSER]
      Name              json_decode
      Format            regex
      Regex             ^(?<log>.*)$
      Time_Key          time
      Time_Format       %Y-%m-%dT%H:%M:%S.%L
      Time_Keep         On
      Decode_Field_As   json log

  update_record.lua: |
    -- Function to append all fields under key "msg"
    function update_record(tag, timestamp, record)
      local newLog = record["log"]
      local newMsg = newLog["msg"]
      for key, val in pairs(newLog) do
        if(key ~= "level" and key ~= "caller" and key ~= "msg" and key ~= "stacktrace" and key ~= "error" and key ~= "errorVerbose") then
          if(key ~= "time") then
            newMsg = newMsg .. ", " .. key .. ": " .. tostring(val)
          end
          newLog[key] = nil
        end
      end
      newLog["msg"] = newMsg
      record["log"] = newLog
      return 2, timestamp, record
    end

{{- end }}


