#  /*
#    Copyright Â© 2023. Cloud Software Group, Inc.
#    This file is subject to the license terms contained
#    in the license file that is distributed with this file.
# */
{{- if .Values.tibotelcollectoruserapp.enabled -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
  name: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - namespaces
      - namespaces/status
      - nodes
      - nodes/spec
      - pods
      - pods/status
      - replicationcontrollers
      - replicationcontrollers/status
      - resourcequotas
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
  labels:
    app: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-{{ .Values.tibotelcollectoruserapp.name }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: {{ .Values.tibotelcollectoruserapp.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    platform.tibco.com/workload-type: "infra"
    platform.tibco.com/dataplane-id: {{ .Values.global.cp.dataplaneId }}
    platform.tibco.com/capability-instance-id: {{ .Values.global.cp.instanceId }}
spec:
  mode: "{{ .Values.tibotelcollectoruserapp.mode }}"
  {{- if .Values.tibotelcollectoruserapp.hpa.enabled }}
  minReplicas: {{ .Values.tibotelcollectoruserapp.hpa.minReplicas }}
  maxReplicas: {{ .Values.tibotelcollectoruserapp.hpa.maxReplicas }}
  autoscaler:
    behavior:
      scaleUp:
        stabilizationWindowSeconds: {{ .Values.tibotelcollectoruserapp.hpa.autoscaler.behavior.scaleUp.stabilizationWindowSeconds.minReplicas }}
      scaleDown:
        stabilizationWindowSeconds: {{ .Values.tibotelcollectoruserapp.hpa.autoscaler.behavior.scaleDown.stabilizationWindowSeconds.minReplicas }}
    targetCPUUtilization: {{ .Values.tibotelcollectoruserapp.hpa.autoscaler.targetCPUUtilization }}
    targetMemoryUtilization: {{ .Values.tibotelcollectoruserapp.hpa.autoscaler.targetMemoryUtilization }}
  {{- end }}
  ports:
  {{- range $key, $port := .Values.tibotelcollectoruserapp.ports }}
  {{- if $port.enabled }}
    - name: {{ $key }}
      targetPort: {{ $port.targetPort }}
      port: {{ $port.port }}
      protocol: {{ $port.protocol }}
  {{- end }}
  {{- end }}
  config: |
{{- if .Values.tibotelcollectoruserapp.config }}
{{ .Values.tibotelcollectoruserapp.config | indent 4 }}
{{- else }}
{{ tpl (.Files.Get "config/tibco-otel-collector-user-app.yaml") . | indent 4 }}
{{- end }}
{{- end }}