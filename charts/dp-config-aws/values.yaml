# name of chart
name: dp-config-aws
# label indicating which project this pipeline belongs to (Don't change)
partOf: TIBCO-Platform
# indicating which tools are used to generate this template (Don't change)
createdBy: generator

dns:
  domain: "abc.dataplanes.pro"
  vanity: "*"

# this ingress object is used for AWS Load Balancer Controller to create ALB
httpIngress:
  enabled: true
  name: traefik
  ingressClassName: alb
  backend:
    serviceName: traefik
    servicePort: 443
  # more AWS annotations: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.6/guide/ingress/annotations/
  annotations:
    alb.ingress.kubernetes.io/group.name: "abc.dataplanes.pro"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/hostname: "*.abc.dataplanes.pro"

storageClass:
  # see: https://docs.aws.amazon.com/eks/latest/userguide/ebs-csi.html
  ebs:
    enabled: true
    name: ebs-gp3
    default: false
    parameters:
      type: gp3
      fsType: ext4
      #iopsPerGB: 10
      encrypted: true
    reclaimPolicy: Retain
    allowVolumeExpansion: true
    volumeBindingMode: WaitForFirstConsumer
  # see: https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html
  # and: https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/examples/kubernetes/dynamic_provisioning/README.md
  # follow this to create EFS: GUI: https://docs.aws.amazon.com/efs/latest/ug/gs-step-two-create-efs-resources.html
  # script: https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/docs/efs-create-filesystem.md
  efs:
    enabled: false
    name: efs-sc
    default: false
    parameters:
      fileSystemId: ""
      directoryPerms: "700"
      # basePath: "/dynamic_provisioning"
      # subPathPattern: "${.PVC.namespace}/${.PVC.name}" # optional
      # gidRangeStart: "1000" # optional
      # gidRangeEnd: "2000" # optional
      # ensureUniqueDirectory: "true" # optional

traefik:
  enabled: true
  hub: # for hub
    enabled: false
  service: # for external-dns
    type: ClusterIP
  ingressRoute: # for dashboard
    dashboard:
      matchRule: Host(`traefik-alb-apps.dp-platform.tcie.pro`) && PathPrefix(`/dashboard`) || Host(`traefik-alb-apps.dp-platform.tcie.pro`) && PathPrefix(`/api`)
      entryPoints:
        - traefik
        - web
        - websecure
  providers: # for external service
    kubernetesIngress:
      allowExternalNameServices: true
  nodeSelector: # for cic2
    kubernetes.io/os: linux
  additionalArguments:
    - '--serversTransport.insecureSkipVerify=true'
